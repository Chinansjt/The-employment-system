{"remainingRequest":"/Users/papaning/代码/git/The-employment-system/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/papaning/代码/git/The-employment-system/src/plugins/http.js","dependencies":[{"path":"/Users/papaning/代码/git/The-employment-system/src/plugins/http.js","mtime":1575291209351},{"path":"/Users/papaning/代码/git/The-employment-system/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/papaning/代码/git/The-employment-system/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\n// http.js\nimport Vue from 'vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport { notify } from \"./utils\";\nVue.use(VueAxios, axios, _Toast); // 环境的切换\n\nif (process.env.NODE_ENV === 'development') {\n  axios.defaults.baseURL = 'proxyApi';\n} else if (process.env.NODE_ENV === 'production') {\n  axios.defaults.baseURL = 'http://yapi.demo.qunar.com/mock/48066';\n}\n\naxios.defaults.timeout = 10000;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'; //http request 拦截器\n\naxios.interceptors.request.use(function (config) {\n  // const token = getCookie('名称');注意使用的时候需要引入cookie方法，推荐js-cookie\n  config.data = JSON.stringify(config.data);\n  config.headers = {\n    /*'Content-Type':'application/x-www-form-urlencoded'*/\n    'Content-Type': 'application/json;charset=UTF-8'\n  };\n\n  if (token) {\n    config.params = {\n      'token': token\n    };\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(err);\n}); //http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  if (response.data.errCode == 2) {\n    router.push({\n      path: \"/login\",\n      querry: {\n        redirect: router.currentRoute.fullPath\n      } //从哪个页面跳转\n\n    });\n  }\n\n  return response;\n}, function (error) {\n  //   Message({\n  //     Message:error.message,\n  //     type:'error',\n  //     duration:5*1000\n  //   });\n  _Toast.fail(error.message);\n\n  return Promise.reject(error);\n}); // get 请求\n\nexport function httpGet(_ref) {\n  var url = _ref.url,\n      _ref$params = _ref.params,\n      params = _ref$params === void 0 ? {} : _ref$params;\n  console.log('this is ', url, params);\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: params\n    }).then(function (res) {\n      resolve(res.data);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n} // post请求\n\nexport function httpPost(_ref2) {\n  var url = _ref2.url,\n      _ref2$data = _ref2.data,\n      data = _ref2$data === void 0 ? {} : _ref2$data,\n      _ref2$params = _ref2.params,\n      params = _ref2$params === void 0 ? {} : _ref2$params;\n  return new Promise(function (resolve, reject) {\n    axios({\n      url: url,\n      method: 'post',\n      transformRequest: [function (data) {\n        var ret = '';\n\n        for (var it in data) {\n          ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';\n        }\n\n        return ret;\n      }],\n      // 发送的数据\n      data: data,\n      // \burl参数\n      params: params\n    }).then(function (res) {\n      resolve(res.data);\n    });\n  });\n}",{"version":3,"sources":["/Users/papaning/代码/git/The-employment-system/src/plugins/http.js"],"names":["Vue","axios","VueAxios","notify","use","process","env","NODE_ENV","defaults","baseURL","timeout","headers","post","interceptors","request","config","data","JSON","stringify","token","params","error","Promise","reject","err","response","errCode","router","push","path","querry","redirect","currentRoute","fullPath","fail","message","httpGet","url","console","log","resolve","get","then","res","catch","httpPost","method","transformRequest","ret","it","encodeURIComponent"],"mappings":"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","sourcesContent":["// http.js\nimport Vue from 'vue'\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\nimport { notify } from \"./utils\";\nimport { Toast } from 'vant';\n\nVue.use(VueAxios, axios, Toast)\n\n// 环境的切换\nif (process.env.NODE_ENV === 'development') {\n    axios.defaults.baseURL = 'proxyApi'\n} else if (process.env.NODE_ENV === 'production') {\n    axios.defaults.baseURL = 'http://yapi.demo.qunar.com/mock/48066'\n}\n\n\naxios.defaults.timeout = 10000\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'\n\n\n//http request 拦截器\naxios.interceptors.request.use(\n    config => {\n      // const token = getCookie('名称');注意使用的时候需要引入cookie方法，推荐js-cookie\n      config.data = JSON.stringify(config.data);\n      config.headers = {\n        /*'Content-Type':'application/x-www-form-urlencoded'*/\n        'Content-Type':'application/json;charset=UTF-8'\n      }\n      if(token){\n        config.params = {'token':token}\n      }\n      return config;\n    },\n    error => {\n      return Promise.reject(err);\n    }\n  );\n   \n   \n  //http response 拦截器\n   \n  axios.interceptors.response.use(\n    response => {\n      if(response.data.errCode ==2){\n        router.push({\n          path:\"/login\",\n          querry:{redirect:router.currentRoute.fullPath}//从哪个页面跳转\n        })\n      }\n      return response;\n    },\n    error => {\n    //   Message({\n    //     Message:error.message,\n    //     type:'error',\n    //     duration:5*1000\n    //   });\n      Toast.fail(error.message);\n      return Promise.reject(error)\n    }\n  )\n\n// get 请求\nexport function httpGet({\n    url,\n    params = {}\n}) {\n    console.log('this is ',url,params)\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n            params\n        }).then((res) => {\n            resolve(res.data)\n        }).catch(err => {\n            reject(err)\n        })\n    })\n}\n\n// post请求\nexport function httpPost({\n    url,\n    data = {},\n    params = {}\n}) {\n    return new Promise((resolve, reject) => {\n        axios({\n            url,\n            method: 'post',\n            transformRequest: [function (data) {\n                let ret = ''\n                for (let it in data) {\n                    ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n                }\n                return ret\n            }],\n            // 发送的数据\n            data,\n            // \burl参数\n            params\n\n        }).then(res => {\n            resolve(res.data)\n        })\n    })\n}"]}]}